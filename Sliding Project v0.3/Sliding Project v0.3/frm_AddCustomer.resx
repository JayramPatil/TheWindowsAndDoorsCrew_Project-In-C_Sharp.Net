<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>